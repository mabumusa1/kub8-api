name: Test
on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        commands: ['lint', 'test', 'coverage']
    name: ${{ matrix.commands }}
    services:
      db:
        image: mysql:5.7
        ports:
          - 3306:3306        
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=db --entrypoint sh mysql:latest -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

    env:
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      APP_KEY: TU0ek-AcW9NoEi3Sy0m4B0vuGq_9xVOT
      DRIVE_DISK: local
      K8S_API_URL: http://localhost:8001
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      DB_PASSWORD: db

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Deps
        run: npm ci
        
      - name: Run ${{ matrix.commands }}
        env: 
          DB_PORT: ${{ job.services.db.ports['3306'] }}      
        run: |
          if [[ "${{ matrix.commands }}" == "lint" ]]; then
            npm run lint
          elif [[ "${{ matrix.commands }}" == "test" ]]; then
            npm run test
          elif [[ "${{ matrix.commands }}" == "coverage" ]]; then
            npm run coverage
          else
            echo "Invalid command"
            exit 1
          fi
  coversall:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        ports:
          - 3306:3306        
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=db --entrypoint sh mysql:latest -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
    env:
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      DB_PASSWORD: db
      DEPLOY_DOMAIN_NAME: steercampaign.net

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install Deps
      run: npm ci
    - name: build      
      run: |
          npm run build --if-present
          npm run lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}