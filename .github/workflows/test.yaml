name: Test
on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
  

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        commands: ['lint', 'test', 'coverage']
    name: ${{ matrix.commands }}
    services:
      db:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306:3306        
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Prepare The Environment
        run: cp .env.ci .env


      - name: Install Deps
        run: npm ci
        
      - name: Run ${{ matrix.commands }}
        env: 
          DB_PORT: ${{ job.services.db.ports['3306'] }}      
        run: |
          if [[ "${{ matrix.commands }}" == "lint" ]]; then
            npm run lint
          elif [[ "${{ matrix.commands }}" == "test" ]]; then
            npm run test
          elif [[ "${{ matrix.commands }}" == "coverage" ]]; then
            npm run coverage
          else
            echo "Invalid command"
            exit 1
          fi

  coversall:
    runs-on: ubuntu-latest
    needs: tests
    name: 'Coversall'
    services:
      db:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306:3306        
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install Deps
      run: npm ci
    - name: build      
      run: |
          npm run build --if-present
          npm run lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}